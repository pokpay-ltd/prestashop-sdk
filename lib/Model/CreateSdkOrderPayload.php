<?php
/**
 * CreateSdkOrderPayload
 *
 * PHP version 7.0
 *
 * @category Class
 * @package  RPay\POK\PaymentsSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * RPay API Documentation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace RPay\POK\PaymentsSdk\Model;

/**
 * CreateSdkOrderPayload Class Doc Comment
 *
 * @category Class
 * @package  RPay\POK\PaymentsSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class CreateSdkOrderPayload implements ModelInterface, \ArrayAccess, \JsonSerializable
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CreateSdkOrderPayload';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'amount' => 'string',
        'currencyCode' => 'string',
        'autoCapture' => 'bool',
        'products' => '\RPay\POK\PaymentsSdk\Model\SdkOrderProduct[]',
        'shippingCost' => 'float',
        'webhookUrl' => 'string',
        'redirectUrl' => 'string',
        'merchantCustomReference' => 'string',
        'deeplink' => 'string',
        'splitWith' => '\RPay\POK\PaymentsSdk\Model\SdkOrderSplitWith',
        'description' => 'string',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'amount' => null,
        'currencyCode' => null,
        'autoCapture' => null,
        'products' => null,
        'shippingCost' => null,
        'webhookUrl' => null,
        'redirectUrl' => null,
        'merchantCustomReference' => null,
        'deeplink' => null,
        'splitWith' => null,
        'description' => null,
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'amount' => 'amount',
        'currencyCode' => 'currencyCode',
        'autoCapture' => 'autoCapture',
        'products' => 'products',
        'shippingCost' => 'shippingCost',
        'webhookUrl' => 'webhookUrl',
        'redirectUrl' => 'redirectUrl',
        'merchantCustomReference' => 'merchantCustomReference',
        'deeplink' => 'deeplink',
        'splitWith' => 'splitWith',
        'description' => 'description',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'amount' => 'setAmount',
        'currencyCode' => 'setCurrencyCode',
        'autoCapture' => 'setAutoCapture',
        'products' => 'setProducts',
        'shippingCost' => 'setShippingCost',
        'webhookUrl' => 'setWebhookUrl',
        'redirectUrl' => 'setRedirectUrl',
        'merchantCustomReference' => 'setMerchantCustomReference',
        'deeplink' => 'setDeeplink',
        'splitWith' => 'setSplitWith',
        'description' => 'setDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'amount' => 'getAmount',
        'currencyCode' => 'getCurrencyCode',
        'autoCapture' => 'getAutoCapture',
        'products' => 'getProducts',
        'shippingCost' => 'getShippingCost',
        'webhookUrl' => 'getWebhookUrl',
        'redirectUrl' => 'getRedirectUrl',
        'merchantCustomReference' => 'getMerchantCustomReference',
        'deeplink' => 'getDeeplink',
        'splitWith' => 'getSplitWith',
        'description' => 'getDescription',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data)
    {
        $this->container['amount'] = $data['amount'] ?? null;
        $this->container['currencyCode'] = $data['currencyCode'] ?? 'ALL';
        $this->container['autoCapture'] = $data['autoCapture'] ?? null;
        $this->container['products'] = $data['products'] ?? null;
        $this->container['shippingCost'] = $data['shippingCost'] ?? null;
        $this->container['webhookUrl'] = $data['webhookUrl'] ?? null;
        $this->container['redirectUrl'] = $data['redirectUrl'] ?? null;
        $this->container['merchantCustomReference'] = $data['merchantCustomReference'] ?? null;
        $this->container['deeplink'] = $data['deeplink'] ?? null;
        $this->container['splitWith'] = $data['splitWith'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['currencyCode'] === null) {
            $invalidProperties[] = "'currencyCode' can't be null";
        }
        if ($this->container['products'] === null) {
            $invalidProperties[] = "'products' can't be null";
        }
        if (!is_null($this->container['shippingCost']) && ($this->container['shippingCost'] < 0)) {
            $invalidProperties[] = "invalid value for 'shippingCost', must be bigger than or equal to 0.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets amount
     *
     * @return string
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param string $amount amount
     *
     * @return self
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets currencyCode
     *
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currencyCode'];
    }

    /**
     * Sets currencyCode
     *
     * @param string $currencyCode currencyCode
     *
     * @return self
     */
    public function setCurrencyCode($currencyCode)
    {
        $this->container['currencyCode'] = $currencyCode;

        return $this;
    }

    /**
     * Gets autoCapture
     *
     * @return bool|null
     */
    public function getAutoCapture()
    {
        return $this->container['autoCapture'];
    }

    /**
     * Sets autoCapture
     *
     * @param bool|null $autoCapture autoCapture
     *
     * @return self
     */
    public function setAutoCapture($autoCapture)
    {
        $this->container['autoCapture'] = $autoCapture;

        return $this;
    }

    /**
     * Gets products
     *
     * @return \RPay\POK\PaymentsSdk\Model\SdkOrderProduct[]
     */
    public function getProducts()
    {
        return $this->container['products'];
    }

    /**
     * Sets products
     *
     * @param \RPay\POK\PaymentsSdk\Model\SdkOrderProduct[] $products products
     *
     * @return self
     */
    public function setProducts($products)
    {
        $this->container['products'] = $products;

        return $this;
    }

    /**
     * Gets shippingCost
     *
     * @return float|null
     */
    public function getShippingCost()
    {
        return $this->container['shippingCost'];
    }

    /**
     * Sets shippingCost
     *
     * @param float|null $shippingCost shippingCost
     *
     * @return self
     */
    public function setShippingCost($shippingCost)
    {

        if (!is_null($shippingCost) && ($shippingCost < 0)) {
            throw new \InvalidArgumentException('invalid value for $shippingCost when calling CreateSdkOrderPayload., must be bigger than or equal to 0.');
        }

        $this->container['shippingCost'] = $shippingCost;

        return $this;
    }

    /**
     * Gets webhookUrl
     *
     * @return string|null
     */
    public function getWebhookUrl()
    {
        return $this->container['webhookUrl'];
    }

    /**
     * Sets webhookUrl
     *
     * @param string|null $webhookUrl webhookUrl
     *
     * @return self
     */
    public function setWebhookUrl($webhookUrl)
    {
        $this->container['webhookUrl'] = $webhookUrl;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets redirectUrl
     *
     * @return string|null
     */
    public function getRedirectUrl()
    {
        return $this->container['redirectUrl'];
    }

    /**
     * Sets redirectUrl
     *
     * @param string|null $redirectUrl redirectUrl
     *
     * @return self
     */
    public function setRedirectUrl($redirectUrl)
    {
        $this->container['redirectUrl'] = $redirectUrl;

        return $this;
    }


    /**
     * Gets merchantCustomReference
     *
     * @return string|null
     */
    public function getMerchantCustomReference()
    {
        return $this->container['merchantCustomReference'];
    }

    /**
     * Sets merchantCustomReference
     *
     * @param string|null $merchantCustomReference merchantCustomReference
     *
     * @return self
     */
    public function setMerchantCustomReference($merchantCustomReference)
    {
        $this->container['merchantCustomReference'] = $merchantCustomReference;

        return $this;
    }

    /**
     * Gets deeplink
     *
     * @return string|null
     */
    public function getDeeplink()
    {
        return $this->container['deeplink'];
    }

    /**
     * Sets deeplink
     *
     * @param string|null $deeplink deeplink
     *
     * @return self
     */
    public function setDeeplink($deeplink)
    {
        $this->container['deeplink'] = $deeplink;

        return $this;
    }
    /**
     * Gets splitWith
     *
     * @return \RPay\POK\PaymentsSdk\Model\SdkOrderSplitWith|null
     */
    public function getSplitWith()
    {
        return $this->container['splitWith'];
    }

    /**
     * Sets splitWith
     *
     * @param \RPay\POK\PaymentsSdk\Model\SdkOrderSplitWith|null $splitWith splitWith
     *
     * @return self
     */
    public function setSplitWith($splitWith)
    {
        $this->container['splitWith'] = $splitWith;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return \RPay\POK\PaymentsSdk\ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            \RPay\POK\PaymentsSdk\ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(\RPay\POK\PaymentsSdk\ObjectSerializer::sanitizeForSerialization($this));
    }
}


